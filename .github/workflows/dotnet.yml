name: .NET

on:
  push:
    branches: [ main ]
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: test-cluster1    # TODO: update to cluster name
  GKE_ZONE: us-central1-a   # TODO: update to cluster zone
  DEPLOYMENT_NAME: gke-test-with-github-actions # TODO: update to deployment name
  IMAGE: static-site

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    
    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}
    
    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    - name: Build with dotnet
      run: |
        dotnet build ./eShopOnWeb.sln --configuration Release
        pwd
        ls -lrt
        ls -lrt ../../
        docker build --tag "gcr.io/$PROJECT_ID/dotnet-core-with-actions:1.0" -f src/Web/Dockerfile .
        
        
    
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/dotnet-core-with-actions:1.0"
        
    # Docker Image Scanning
    - name: Image Scaning with Trivy
      run: |
        wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.tar.gz
        tar -xvzf trivy_0.18.3_Linux-64bit.tar.gz
        chmod 755 trivy
        ./trivy image --severity CRITICAL "gcr.io/$PROJECT_ID/dotnet-core-with-actions:1.0"
    
    - name: Create GKE Cluster
      run: gcloud container clusters create test-cluster1 --zone us-central1-a
    
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image dotnet-core-with-actions=gcr.io/$PROJECT_ID/dotnet-core-with-actions:1.0
        ./kustomize build . | kubectl apply -f -
        kubectl get services -o wide
    
 
    
    
